---
title: 'Velogames solver: Tour de France 2023'
jupyter: julia-1.9
---

## Load libraries

```{julia}
using Velogames

race_url = "https://www.velogames.com/tour-de-france/2023/riders.php"
race_sex = "we"
race_category = "individual"
```

## Load data

Using only PCS ranking at the moment and assuming 0pts for all riders not in the top 100 of the PCS ranking for that category.

```{julia}
rider_df = getvgriders(race_url)
pcs_df = getpcsranking(race_sex, race_category)
rename!(pcs_df, :points => :pcs_pts)
select!(pcs_df, Not([:rider, :team]))

# join the velogames and pcs dataframes on the riderkey column
rider_df = leftjoin(rider_df, pcs_df, on=:riderkey)
rider_df = coalesce.(rider_df, 0)
```

```{julia}
show(rider_df)
```

## Build model

```{julia}
model_results = build_model_oneday(rider_df);
```

```{julia}
model_results.data |> sum
```

```{julia}
# total cost
rider_df.cost .* model_results.data |> sum
```

## Results

```{julia}
# selected riders
rider_df[!, :chosen] = model_results.data .> 0.5
chosen_team = filter(:chosen => ==(true), rider_df)
chosen_team[:, [:rider, :team, :chosen, :pcs_pts, :cost]]
```

