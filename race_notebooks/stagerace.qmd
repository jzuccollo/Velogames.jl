---
title: "Stage race"
---

## Load libraries

```{julia}
using Velogames, DataFrames

raceurl = "https://www.velogames.com/velogame-femmes/2023/riders.php"
racesex = "we"
racecategory = "individual"
```

## Load data

Using only PCS ranking at the moment and assuming 0pts for all riders not in the top 100 of the PCS ranking for that category.

```{julia}
riderdf = getvgriders(raceurl)
pcsdf = getpcsranking(racesex, racecategory)
rename!(pcsdf, :points => :pcspts)
select!(pcsdf, Not([:rider, :team]))

# join the velogames and pcs dataframes on the riderkey column
riderdf = leftjoin(riderdf, pcsdf, on=:riderkey)
riderdf = coalesce.(riderdf, 0)
```

```{julia}
show(riderdf)
```

## Build model

Uses the one-day model because women's races don't have the rider types that men's stage races do. Need to split these.

```{julia}
modelresults = buildmodeloneday(riderdf, 9, :pcspts, :cost);
```

```{julia}
modelresults.data |> sum
```

```{julia}
# total cost
riderdf.cost .* modelresults.data |> sum
```

## Results

```{julia}
# selected riders
riderdf.chosen = modelresults.data .> 0.5
chosenteam = filter(row -> row.chosen, riderdf)
chosenteam[:, [:rider, :team, :chosen, :pcspts, :cost]]
```

